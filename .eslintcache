[{"/home/taniya/Projects/wrec/recommend/src/index.tsx":"1","/home/taniya/Projects/wrec/recommend/src/views/Options/App.tsx":"2","/home/taniya/Projects/wrec/recommend/src/views/Options/components/BookShelf.tsx":"3"},{"size":256,"mtime":1614612235206,"results":"4","hashOfConfig":"5"},{"size":1393,"mtime":1625782143808,"results":"6","hashOfConfig":"5"},{"size":3697,"mtime":1626367489585,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1q0q35e",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/home/taniya/Projects/wrec/recommend/src/index.tsx",[],["16","17"],"/home/taniya/Projects/wrec/recommend/src/views/Options/App.tsx",[],"/home/taniya/Projects/wrec/recommend/src/views/Options/components/BookShelf.tsx",["18"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { ResponsiveCirclePackingCanvas } from '@nivo/circle-packing'\nimport sample from './sample.json'\n\nconst Container = styled.div`\n  height: 700px;\n`\n\nexport const BookShelf = () => {\n  const [ zoomedId, setZoomedId ] = useState<string | null>(null)\n  const [ loading, setLoading ] = useState(false)\n  const [ data, setData ] = useState([{\n    \"title\": \"ultrices mattis odio donec vitae nisi\",\n    \"classify_DDC\": 132.174,\n  }])\n\n  useEffect(() => {\n    axios\n      .get(\"/mockData/\")\n      .then((res) => {\n        setData(res.data)\n        setLoading(false)\n      })\n      .catch((err) => console.log(err));\n  }, [])\n\n  // const literature = {\n  //   \"name\": \"Literature\",\n  //   \"children\": [{\n  //     \"name\": \"Book Title\",\n  //     \"loc\": 1\n  //   }]\n  // }\n\n  // const historyAndGeography = {\n  //   \"name\": \"History and Geography\",\n  //   \"children\": [{\n  //     \"name\": \"Book Title\",\n  //     \"loc\": 1\n  //   }]\n  // }\n\n  // const rest = {\n  //   \"name\": \"Rest\",\n  //   \"children\": [{\n  //     \"name\": \"Book Title\",\n  //     \"loc\": 1\n  //   }]\n  // }\n\n  // const data = {\n  //   ...literature,\n  //   ...historyAndGeography,\n  //   ...rest\n  // }\n\n  // const data = {\n  //   \"name\": 'data',\n  //   \"value\": 0,\n  //   \"children\": [\n  //     {\n  //       \"name\": 'literature',\n  //       \"value\": 1,\n  //       \"children\": [{\n  //         \"name\": \"Book Title\",\n  //         \"loc\": 1\n  //       }]\n  //     },\n  //     {\n  //       \"name\": 'history',\n  //       \"value\": 1,\n  //       \"children\": [{\n  //         \"name\": \"Book Title\",\n  //         \"loc\": 1\n  //       }]\n  //     },\n  //     {\n  //       \"name\": 'rest',\n  //       \"value\": 1,\n  //       \"children\": [{\n  //         \"name\": \"Book Title\",\n  //         \"loc\": 1\n  //       }]\n  //     }\n  //   ]\n  // }\n  \n  // books.forEach(book => \n  //   {\n  //     if (book.classify_DDC > 800 && book.classify_DDC < 900) {\n  //         data.children[0].children.push({\n  //           \"name\": book.title,\n  //           \"loc\": 1\n  //         })\n  //     } else if (book.classify_DDC > 900 && book.classify_DDC < 1000) {\n  //         data.children[1].children.push({\n  //           \"name\": book.title,\n  //           \"loc\": 1\n  //         })\n  //     } else {\n  //         data.children[2].children.push({\n  //           \"name\": book.title,\n  //           \"loc\": 1\n  //         })\n  //     }\n  //   }\n  // )\n\n  return (\n    loading ? \n    <p>Loading...</p> \n    // : books.length === 1 ?\n    // <p>You don't seem to have any books! Add some below now.</p>\n    :\n    // <AllBooks>\n    //   <Row \n    //     books={literature}\n    //     heading={'Class 800 – Literature'}\n    //   />\n    //   <Row \n    //     books={historyAndGeography}\n    //     heading={'Class 900 – History and geography'}\n    //   />\n    //   <Row \n    //     books={emptyTest}\n    //     heading={'Class Empty – Test'}\n    //   />\n    // </AllBooks>\n\n    // graph MUST be in a parent container of a defined height or else it will not show up\n    <Container>\n      <ResponsiveCirclePackingCanvas\n        data={sample[0]}\n        margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n        id=\"name\"\n        value=\"loc\"\n        colors={{ scheme: 'nivo' }}\n        childColor={{ from: 'color', modifiers: [ [ 'brighter', 0.4 ] ] }}\n        padding={4}\n        borderWidth={1}\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.5 ] ] }}\n        zoomedId={zoomedId}\n        motionConfig=\"slow\"\n        onClick={node => {\n          setZoomedId(zoomedId === node.id ? null : node.id)\n        }}\n      />\n    </Container>\n    \n  );\n}",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":14,"column":11,"nodeType":"25","messageId":"26","endLine":14,"endColumn":15},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]